##############################################################################
# Created by: Samuel Morency and Paul Blais-Morisset
# Created on: July 2022
# Created for: Global Affairs Canada - Investment Strategy and Analysis
# 
# This module generates FDI/CDIA bilateral brief Word documents using the
# excel spreadsheet generated by investmentStockIngestion.py
##############################################################################

import xlwings as xw
from docxtpl import DocxTemplate
import win32com.client
import PIL
from PIL import ImageGrab, Image
from constants import outputToWord, toWordDirectory

#toWordDirectory = '//Signet/I-org/XED/BED-ELF/Client Prom & Info Matls - Promotion et info de la client√®le/BEI/Bilateral FDI briefs/Automation project 2022/Word Automation/'
#outputToWord = toWordDirectory + 'Template_PBM_SM_test.xlsm'


def word(country, version):
    xw.Book(outputToWord).set_mock_caller()
    wb = xw.Book.caller()
    sht_panel = wb.sheets['PANEL']
    
    # -- Change analysis and get values from Excel
    sht_details = wb.sheets['Details']
    sht_details.range("A3").value=country
    context = sht_panel.range('A2').options(dict, expand='table', numbers=int).value
    twoGraphs = wb.sheets['Graph'].range('O5').value
    
    # -- Save and close the Excel file so the next chunk of code can use it
    wb.save()
    #wb.save(toWordDirectory+'/Excel/'+country+'.xlsx')
    wb.close()
    
    # -- Extracting Chart
    #input_file = directory+'/Excel/'+country+'.xlsx'
    operation = win32com.client.Dispatch("Excel.Application")
    operation.Visible = 0
    operation.DisplayAlerts = 0
    workbook_2 = operation.Workbooks.Open(outputToWord)
    #workbook_2 = operation.Workbooks.Open(toWordDirectory+'/Excel/'+country+'.xlsx')
    
    if twoGraphs:
        doc = DocxTemplate(toWordDirectory+'Template2.docx')
        docFr = DocxTemplate(toWordDirectory+'TemplateFr2.docx')
        sheet = operation.Sheets('Graph (2)')
    else:
        doc = DocxTemplate(toWordDirectory+'Template.docx')
        docFr = DocxTemplate(toWordDirectory+'TemplateFr.docx')
        sheet = operation.Sheets('Graph')
    
    i=1
    for x, chart in enumerate(sheet.Shapes):
        chart.Copy()
        image = ImageGrab.grabclipboard()
        image.save(toWordDirectory+'/Excel/'+country+str(i)+'.png', 'png')
        i += 1
        pass
    workbook_2.Close(True)
    operation.Quit()
    
    # -- Replace Images
    doc.replace_pic('Placeholder.png', toWordDirectory+'Flags/'+country+'.png')
    doc.replace_pic('Placeholder_1.png', toWordDirectory+'Excel/'+country+'1.png')
    docFr.replace_pic('Placeholder.png', toWordDirectory+'Flags/'+country+'.png')
    if twoGraphs:
        doc.replace_pic('Placeholder_2.png', toWordDirectory+'Excel/'+country+'2.png')
        docFr.replace_pic('Placeholder_1.png', toWordDirectory+'Excel/'+country+'3.png')
        docFr.replace_pic('Placeholder_2.png', toWordDirectory+'Excel/'+country+'4.png')
    else:
        docFr.replace_pic('Placeholder_1.png', toWordDirectory+'Excel/'+country+'2.png')
    
    # -- Render & Save Word Document
    output_name = toWordDirectory +'Word/'+version+'/English/Automated_Bilat_'+country+'.docx'
    output_name_fr = toWordDirectory +'Word/'+version+'/French/FR_Automated_Bilat_'+country+'.docx'
    doc.render(context, autoescape=True)
    doc.save(output_name)
    docFr.render(context, autoescape=True)
    docFr.save(output_name_fr)
    print(country+" bilats done")

def main():
    print("You just ran main() in the bilateralBriefAutomation.py module.")
    #word('France')
    #countryList = ['France', 'Australia']
    #for country in countryList:
        #word(country)


if __name__ == "__main__":
    main()